package hw03frequencyanalysis

import (
	"testing"

	"github.com/stretchr/testify/require"
)

// Change to true if needed.
var taskWithAsteriskIsCompleted = false

var text = `Как видите, он  спускается  по  лестнице  вслед  за  своим
		другом   Кристофером   Робином,   головой   вниз,  пересчитывая
		ступеньки собственным затылком:  бум-бум-бум.  Другого  способа
		сходить  с  лестницы  он  пока  не  знает.  Иногда ему, правда,
			кажется, что можно бы найти какой-то другой способ, если бы  он
		только   мог   на  минутку  перестать  бумкать  и  как  следует
		сосредоточиться. Но увы - сосредоточиться-то ему и некогда.
			Как бы то ни было, вот он уже спустился  и  готов  с  вами
		познакомиться.
		- Винни-Пух. Очень приятно!
			Вас,  вероятно,  удивляет, почему его так странно зовут, а
		если вы знаете английский, то вы удивитесь еще больше.
			Это необыкновенное имя подарил ему Кристофер  Робин.  Надо
		вам  сказать,  что  когда-то Кристофер Робин был знаком с одним
		лебедем на пруду, которого он звал Пухом. Для лебедя  это  было
		очень   подходящее  имя,  потому  что  если  ты  зовешь  лебедя
		громко: "Пу-ух! Пу-ух!"- а он  не  откликается,  то  ты  всегда
		можешь  сделать вид, что ты просто понарошку стрелял; а если ты
		звал его тихо, то все подумают, что ты  просто  подул  себе  на
		нос.  Лебедь  потом  куда-то делся, а имя осталось, и Кристофер
		Робин решил отдать его своему медвежонку, чтобы оно не  пропало
		зря.
			А  Винни - так звали самую лучшую, самую добрую медведицу
		в  зоологическом  саду,  которую  очень-очень  любил  Кристофер
		Робин.  А  она  очень-очень  любила  его. Ее ли назвали Винни в
		честь Пуха, или Пуха назвали в ее честь - теперь уже никто  не
		знает,  даже папа Кристофера Робина. Когда-то он знал, а теперь
		забыл.
			Словом, теперь мишку зовут Винни-Пух, и вы знаете почему.
			Иногда Винни-Пух любит вечерком во что-нибудь поиграть,  а
		иногда,  особенно  когда  папа  дома,  он больше любит тихонько
		посидеть у огня и послушать какую-нибудь интересную сказку.
			В этот вечер...`

var test1 = `Хинбад-Храпоходи и Динбад-Дремоход и Шинбад-Чудоход и Чинбад-Сумасброд и Пинбад-Пешеход и Минбад-Скороход 
и Тинбад-Тихоход  и Винбад-Вездеход и Линбад-Луноход и Финбад-Виноход и Ринбад-Ракоход и Кинбад-Коновод  
и Зинбад-Обормот и Синбад-Мореход и Бинбад-Шутоход`

var test2 = `За речною косой лопоухий косой пал под острой косой косой бабы с косой, 
по фамилии Косой: бедолага Косой был по жизни косой, 
а к тому же в тот день шел он сильно косой и забрел по косой на покос за косой, 
где косою косой баба с русой косой подкосила его жизнь - ведь размах у Косой был уж сильно косой!`

var test3 = `Жили у бабуси
Два весёлых гуся,
Один - серый, другой - белый,
Два весёлых гуся.
Один - серый, другой - белый,
Два весёлых гуся!`

func TestTop10(t *testing.T) {
	t.Run("no words in empty string", func(t *testing.T) {
		require.Len(t, Top10(""), 0)
	})

	t.Run("positive test", func(t *testing.T) {
		if taskWithAsteriskIsCompleted {
			expected := []string{
				"а",         // 8
				"он",        // 8
				"и",         // 6
				"ты",        // 5
				"что",       // 5
				"в",         // 4
				"его",       // 4
				"если",      // 4
				"кристофер", // 4
				"не",        // 4
			}
			require.Equal(t, expected, Top10(text))
		} else {
			expected := []string{
				"он",        // 8
				"а",         // 6
				"и",         // 6
				"ты",        // 5
				"что",       // 5
				"-",         // 4
				"Кристофер", // 4
				"если",      // 4
				"не",        // 4
				"то",        // 4
			}
			require.Equal(t, expected, Top10(text))
		}
	})

	t.Run("string with many spaces and without words", func(t *testing.T) {
		require.Len(t, Top10("            "), 0)
	})

	t.Run("less then 10 words", func(t *testing.T) {
		expected := []string{
			"-",
			"---",
			"ab",
			"f",
			"g",
			"r",
			"",
			"",
			"",
			"",
		}
		require.Equal(t, expected, Top10(" ab r f g --- -"))
	})

	t.Run("test1", func(t *testing.T) {
		expected := []string{
			"и", // 14, остальные - 1
			"Бинбад-Шутоход",
			"Винбад-Вездеход",
			"Динбад-Дремоход",
			"Зинбад-Обормот",
			"Кинбад-Коновод",
			"Линбад-Луноход",
			"Минбад-Скороход",
			"Пинбад-Пешеход",
			"Ринбад-Ракоход",
		}
		require.Equal(t, expected, Top10(test1))
	})

	t.Run("test2", func(t *testing.T) {
		expected := []string{
			"косой",  // 8
			"косой,", // 3
			"по",     // 3
			"Косой",  // 2
			"был",    // 2
			"с",      // 2
			"сильно", // 2
			"-",      // 1
			"За",     // 1
			"Косой:", // 1
		}
		require.Equal(t, expected, Top10(test2))
	})

	t.Run("test3", func(t *testing.T) {
		expected := []string{
			"-",       // 4
			"Два",     // 3
			"весёлых", // 3
			"Один",    // 2
			"белый,",  // 2
			"другой",  // 2
			"серый,",  // 2
			"Жили",    // 1
			"бабуси",  // 1
			"гуся!",   // 1
		}
		require.Equal(t, expected, Top10(test3))
	})
}
